import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id 'java'
    id 'com.modrinth.minotaur' version '2.+'
    id 'io.papermc.hangar-publish-plugin' version '0.0.5'
}

defaultTasks 'build'

def buildNum = System.getenv('GITHUB_RUN_NUMBER') ?: 'SNAPSHOT'
project.group = 'net.pl3x.map.claims'
project.version = "$minecraftVersion-$buildNum"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    maven { url = 'https://jitpack.io/' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://maven.enginehub.org/repo/' }
    maven { url = 'https://repo.glaremasters.me/repository/bloodshot' }
    exclusiveContent {
        forRepository { maven { url = 'https://api.modrinth.com/maven/' } }
        filter { includeGroup 'maven.modrinth' }
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:$bukkitVersion") {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    compileOnly "maven.modrinth:pl3xmap:$pl3xmapVersion"

    compileOnly "com.github.cjburkey01:ClaimChunk:$claimchunkVersion"
    compileOnly "com.griefdefender:api:$griefdefenderVersion"
    compileOnly "com.github.TechFortress:GriefPrevention:$griefpreventionVersion"
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:$worldguardVersion"
}

compileJava {
    options.encoding = 'UTF-8'
    options.release.set(17)
}

javadoc {
    options.encoding = 'UTF-8'
}

processResources {
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand(
                'name': rootProject.name,
                'group': project.group,
                'version': project.version,
                'authors': authors,
                'description': project.properties['description'],
                'website': website
        )
    }
}

var file = rootProject.layout.buildDirectory.file("libs/${rootProject.name}-${project.version}.jar")

modrinth {
    autoAddDependsOn = false
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'pl3xmap-claims'
    versionName = "${project.version}"
    versionNumber = "${project.version}"
    versionType = 'release'
    uploadFile = file.get()
    gameVersions.addAll(["${minecraftVersion}"])
    loaders.addAll(['bukkit', 'paper', 'purpur', 'spigot'])
    changelog = System.getenv('COMMIT_MESSAGE')
    dependencies {
        required.project "pl3xmap"
    }
}
